// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  username     String   @unique // 사용자 고유 아이디
  password     String
  name         String
  role         Role     @default(MEMBER) // 역할 구분
  profileImage String?  // 프로필 이미지 (선택적)
  phoneNumber  String?  // 연락처 (선택적)
  createdAt    DateTime @default(now())

  // 관계
  member       Member?
  trainer      Trainer?
}

model Member {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  trainers     Trainer[] // 연결된 트레이너 목록
  schedules    Schedule[] // 관련된 스케줄 목록
}

model Trainer {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  members      Member[]  // 관리하는 회원 목록
  schedules    Schedule[] // PT 스케줄
}

model Schedule {
  id           Int      @id @default(autoincrement())
  date         DateTime // PT 날짜 및 시간
  location     String?  // PT 장소 (선택적)
  status       Status   @default(SCHEDULED) // 일정 상태
  memberId     Int
  trainerId    Int
  member       Member   @relation(fields: [memberId], references: [id])
  trainer      Trainer  @relation(fields: [trainerId], references: [id])
}

enum Role {
  TRAINER
  MEMBER
}

enum Status {
  SCHEDULED
  COMPLETED
  CANCELED
}